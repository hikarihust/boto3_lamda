https://boto3.amazonaws.com/v1/documentation/api/latest/index.html#
Boto3
    IAM - > Add user 
        boto3-demo
        Access type: Programmatic access
        Enables an access key ID and secret access key for the AWS API, CLI, SDK, and other development tools.
        Attach existing policies directly
            AdministratorAccess
    aws cli(Using Python and pip on Windows)
        pip install awscli
        aws configure

Create EC2 Instances
    Docs Available Services AccessAnalyzer
    https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/accessanalyzer.html#client
    boto3 ec2 instance
    ami-0e38b48473ea57778

Launching EC2 Instances

Operations on EC2 (Start, Stop, Terminate)
    boto3 ec2 instance
    start_instances()

Describing EC2 Instances

Applying Filters while describing EC2
    instance-state-name - The state of the instance (pending | running | shutting-down | terminated | stopping | stopped ).
    tag :<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the 
        tag value as the filter value. For example, to find all resources that have a tag with the key Owner and the value TeamA , 
        specify tag:Owner for the filter name and TeamA for the filter value.

Boto3 Collections
    Docs User Guides Collections
    https://boto3.amazonaws.com/v1/documentation/api/latest/guide/collections.html

Taking EBS Snapshots & Send Email 
    Volume 
    Snapshot
    sns
        Topics -> Create topic(Name: snapshots, Display name: JavaHome)
        Create subscription
            Protocol: Email
            Endpoint: xxxxx.gmail.com
            Comfirm mail

Deleting EBS Snapshots, older than N days

Migrating AMIs To  different regions using Boto3 Waiters

Demo - Create Lambda Function
    Services - Lamda - Create function - Author from scratch
    Function name
    Runtime: Python
    Choose or create an execution role: Create a new role with basic Lambda permissions
    Create function
    Test
    Event name: helloworld
    Create
    configure test event
        {
            "name": "quang"
        }

AWS Lambda - Performance Tuning, Managing Memory, CPU & running Lambda in VPC
    Basic settings
        TimeoutInfo: 5 minute, 0 second
    Memory (MB): 128MB
    VPC

AWS Lambda - Managing Lambda Versions
    LambdaVersionsingDemo - Save 
    CloudWatch - Rules - Create rule
    Step 1: Create rule
        Schedule: Fixed rate of 1 minute
        Add target
            Lambda function
            Function: LambdaVersionsingDemo
    Step 2: Configure rule details
    Logs

    Lambda
        Publish new version: RELEASE-1
    CloudWatch - Edit
        Configure version/alias - Versions 1